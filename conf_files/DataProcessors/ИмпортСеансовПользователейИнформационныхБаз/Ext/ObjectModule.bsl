Функция ТаблицаИмпортаЗаполнена(ошибки = неопределено) экспорт
	
	если ТаблицаИмпорта.Количество() = 0 тогда
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(ошибки,, НСтр("ru = 'Таблица импорта пуста'"));
		
	конецЕсли;
	
	шаблонСообщенияОбОшибке = НСтр("ru = 'В строке %1 отсутствует %2'");
	
	для каждого строкаИмпорта из ТаблицаИмпорта цикл
		
		если строкаИмпорта.Дата = дата(1,1,1) тогда
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(
				ошибки,, 
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(шаблонСообщенияОбОшибке, строкаИмпорта.НомерСтроки, " дата")
			);
		конецЕсли;
		
		если строкаИмпорта.Сервер = Справочники.Серверы.ПустаяСсылка() тогда
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(
				ошибки,, 
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(шаблонСообщенияОбОшибке, строкаИмпорта.НомерСтроки, " сервер")
			);
		конецЕсли;
		
		если строкаИмпорта.ИнформационнаяБаза = Справочники.ИнформационныеБазы.ПустаяСсылка() тогда
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(
				ошибки,, 
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(шаблонСообщенияОбОшибке, строкаИмпорта.НомерСтроки, " информационная база")
			);
		конецЕсли;
		
		если ПустаяСтрока(строкаИмпорта.ИмяПользователя) тогда
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(
				ошибки,, 
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(шаблонСообщенияОбОшибке, строкаИмпорта.НомерСтроки, " имя пользователя")
			);
		конецЕсли;
		
		если строкаИмпорта.Приложение1С = Перечисления.Приложения1С.ПустаяСсылка() тогда
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(
				ошибки,, 
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(шаблонСообщенияОбОшибке, строкаИмпорта.НомерСтроки, " приложение 1С")
			);
		конецЕсли;
		
		если строкаИмпорта.НачалоСеанса = дата(1,1,1) тогда
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(
				ошибки,, 
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(шаблонСообщенияОбОшибке, строкаИмпорта.НомерСтроки, " начало сеанса")
			);
		конецЕсли;
		
		если строкаИмпорта.КонецСеанса = дата(1,1,1) тогда
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(
				ошибки,, 
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(шаблонСообщенияОбОшибке, строкаИмпорта.НомерСтроки, " конец сеанса")
			);
		конецЕсли;
		
		если строкаИмпорта.НомерСессии = 0 тогда
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(
				ошибки,, 
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(шаблонСообщенияОбОшибке, строкаИмпорта.НомерСтроки, " номер сессии")
			);
		конецЕсли;
	КонецЦикла;	
	
	возврат ошибки = неопределено
	
КонецФункции

Процедура Импортировать() экспорт
	
	запрос = новый запрос;
	запрос.текст = "ВЫБРАТЬ
	               |	табСопоставления.НомерСессии КАК НомерСессии,
	               |	табСопоставления.Дата КАК Дата,
	               |	табСопоставления.ИмяПользователя КАК ИмяПользователя,
	               |	табСопоставления.Приложение1С КАК Приложение1С,
	               |	табСопоставления.НачалоСеанса КАК НачалоСеанса,
	               |	табСопоставления.КонецСеанса КАК КонецСеанса,
	               |	табСопоставления.Сервер КАК Сервер,
	               |	табСопоставления.ИнформационнаяБаза КАК ИнформационнаяБаза
	               |ПОМЕСТИТЬ втТаблицаСопоставления
	               |ИЗ
	               |	&табСопоставления КАК табСопоставления
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	НомерСессии,
	               |	Дата,
	               |	ИмяПользователя,
	               |	Приложение1С,
	               |	НачалоСеанса,
	               |	КонецСеанса
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	втТаблицаСопоставления.НомерСессии КАК НомерСессии,
	               |	втТаблицаСопоставления.Дата КАК Дата,
	               |	втТаблицаСопоставления.ИмяПользователя КАК ИмяПользователя,
	               |	втТаблицаСопоставления.Приложение1С КАК Приложение1С,
	               |	втТаблицаСопоставления.НачалоСеанса КАК НачалоСеанса,
	               |	втТаблицаСопоставления.КонецСеанса КАК КонецСеанса,
	               |	НЕ СеансыПользователейИнформационныхБаз.НомерСессии ЕСТЬ NULL КАК естьВРегистре,
	               |	втТаблицаСопоставления.ИнформационнаяБаза КАК ИнформационнаяБаза,
	               |	втТаблицаСопоставления.Сервер КАК Сервер
	               |ПОМЕСТИТЬ втИсходная
	               |ИЗ
	               |	втТаблицаСопоставления КАК втТаблицаСопоставления
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СеансыПользователейИнформационныхБаз КАК СеансыПользователейИнформационныхБаз
	               |		ПО втТаблицаСопоставления.Дата = СеансыПользователейИнформационныхБаз.Дата
	               |			И втТаблицаСопоставления.ИмяПользователя = СеансыПользователейИнформационныхБаз.ИмяПользователя
	               |			И втТаблицаСопоставления.НомерСессии = СеансыПользователейИнформационныхБаз.НомерСессии
	               |			И втТаблицаСопоставления.Приложение1С = СеансыПользователейИнформационныхБаз.Приложение1С
	               |			И втТаблицаСопоставления.НачалоСеанса = СеансыПользователейИнформационныхБаз.НачалоСеанса
	               |			И втТаблицаСопоставления.КонецСеанса = СеансыПользователейИнформационныхБаз.КонецСеанса
	               |			И втТаблицаСопоставления.Сервер = СеансыПользователейИнформационныхБаз.Сервер
	               |			И втТаблицаСопоставления.ИнформационнаяБаза = СеансыПользователейИнформационныхБаз.ИнформационнаяБаза
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	втТаблицаСопоставления.НомерСессии,
	               |	втТаблицаСопоставления.Дата,
	               |	втТаблицаСопоставления.ИмяПользователя,
	               |	втТаблицаСопоставления.Приложение1С,
	               |	втТаблицаСопоставления.НачалоСеанса,
	               |	втТаблицаСопоставления.КонецСеанса,
	               |	НЕ СеансыПользователейИнформационныхБаз.НомерСессии ЕСТЬ NULL,
	               |	втТаблицаСопоставления.ИнформационнаяБаза,
	               |	втТаблицаСопоставления.Сервер
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	естьВРегистре
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	втИсходная.НомерСессии КАК НомерСессии,
	               |	втИсходная.Дата КАК Дата,
	               |	втИсходная.ИмяПользователя КАК ИмяПользователя,
	               |	втИсходная.Приложение1С КАК Приложение1С,
	               |	втИсходная.НачалоСеанса КАК НачалоСеанса,
	               |	втИсходная.КонецСеанса КАК КонецСеанса,
	               |	втИсходная.естьВРегистре КАК естьВРегистре,
	               |	втИсходная.Сервер КАК Сервер,
	               |	втИсходная.ИнформационнаяБаза КАК ИнформационнаяБаза
	               |ИЗ
	               |	втИсходная КАК втИсходная
	               |ГДЕ
	               |	НЕ втИсходная.естьВРегистре";
	запрос.УстановитьПараметр("табСопоставления", ТаблицаИмпорта.Выгрузить());
	выбРезультатЗапроса = запрос.Выполнить().Выбрать();
	
	пока выбРезультатЗапроса.Следующий() цикл
		записьРегистра = РегистрыСведений.СеансыПользователейИнформационныхБаз.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(записьРегистра, выбРезультатЗапроса);
		записьРегистра.Записать(ложь);
	КонецЦикла;	
	
КонецПроцедуры	