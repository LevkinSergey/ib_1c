
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = ложь;
	
	Настройки = КомпоновщикНастроек.Настройки;
	
	
	идНастройки = Настройки.ПараметрыДанных.НайтиЗначениеПараметра(новый ПараметрКомпоновкиДанных("ПериодичностьЗамера")).идентификаторПользовательскойНастройки;
	периодичностьЗамера = КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(идНастройки).Значение;
	
	идНастройки = Настройки.ПараметрыДанных.НайтиЗначениеПараметра(новый ПараметрКомпоновкиДанных("Период")).идентификаторПользовательскойНастройки;
	период = КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(идНастройки).Значение;

	таблицаИсточник = ИнициализироватьТаблицуИсточникНабораДанных(период, ПериодичностьЗамера);
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	//МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, Настройки, ДанныеРасшифровки);
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, КомпоновщикНастроек.ПолучитьНастройки(), ДанныеРасшифровки);

	ВнешниеНаборыДанных = Новый Структура;
	ВнешниеНаборыДанных.Вставить("ИсточникНабораДанных",таблицаИсточник);

	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, ДанныеРасшифровки);

	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	      
КонецПроцедуры

Функция ИнициализироватьТаблицуИсточникНабораДанных(период, периодичностьЗамера)
	
	табВремени = новый таблицаЗначений;
	мТипов = новый массив;
	
	квалификатор = новый КвалификаторыДаты(ЧастиДаты.ДатаВремя);
	мТипов.Добавить(тип("Дата"));
	описаниеТипов = новый ОписаниеТипов(мТипов, , , квалификатор);
	табВремени.Колонки.Добавить("Дата", описаниеТипов);

	моментЗамера = период.ДатаНачала;
	
	пока моментЗамера <= Период.ДатаОкончания цикл		
		стрТаблицыВремени = табВремени.Добавить();
		стрТаблицыВремени.Дата = моментЗамера;
		моментЗамера = моментЗамера + ПериодичностьЗамера*60;		
	КонецЦикла;
	
	запрос = новый запрос;
	запрос.Текст = "ВЫБРАТЬ
	               |	ТаблицаВремени.Дата КАК Дата
	               |ПОМЕСТИТЬ втВремени
	               |ИЗ
	               |	&ТаблицаВремени КАК ТаблицаВремени
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	втВремени.Дата КАК Момент,
	               |	СеансыПользователейИнформационныхБаз.Дата КАК Дата,
	               |	СеансыПользователейИнформационныхБаз.Сервер КАК Сервер,
	               |	СеансыПользователейИнформационныхБаз.ИнформационнаяБаза КАК ИнформационнаяБаза,
	               |	СеансыПользователейИнформационныхБаз.ИмяПользователя КАК ИмяПользователя,
	               |	СеансыПользователейИнформационныхБаз.Приложение1С КАК Приложение1С,
	               |	СеансыПользователейИнформационныхБаз.НачалоСеанса КАК НачалоСеанса,
	               |	СеансыПользователейИнформационныхБаз.КонецСеанса КАК КонецСеанса,
	               |	СеансыПользователейИнформационныхБаз.НомерСессии КАК НомерСессии,
	               |	СеансыПользователейИнформационныхБаз.ИнформационнаяБаза.Партнер КАК Партнер
	               |ИЗ
	               |	втВремени КАК втВремени
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СеансыПользователейИнформационныхБаз КАК СеансыПользователейИнформационныхБаз
	               |		ПО втВремени.Дата >= СеансыПользователейИнформационныхБаз.НачалоСеанса
	               |			И втВремени.Дата <= СеансыПользователейИнформационныхБаз.КонецСеанса";
	запрос.УстановитьПараметр("ТаблицаВремени", табВремени);
	
	возврат запрос.Выполнить().Выгрузить();
	
КонецФункции

